Bootstrap: docker
From: nvidia/cuda:10.0-cudnn7-devel-centos7

%help
Centos7 with cuda10.0 cudnn7

To start your container simply try
singularity exec THIS_CONTAINER.simg bash

To use GPUs, try
singularity exec --nv THIS_CONTAINER.simg bash


%environment

    # for system
    export CUDA_DEVICE_ORDER=PCI_BUS_ID

    # Add cupti to the path for profiling:
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64

    source scl_source enable devtoolset-4
    export PATH=/usr/local/mpich/install/bin/:${PATH}
    export LD_LIBRARY_PATH=/usr/local/mpich/install/lib/:${LD_LIBRARY_PATH}

%post

    # yum basics
    yum update -y
    yum groupinstall -y "Development Tools"
    yum install -y epel-release
    yum install -y centos-release-scl
    yum install -y devtoolset-4
    yum install -y wget emacs vim
    yum install -y emacs vim openssh-clients zip
    yum install -y python-devel python-pip python-setuptools
    yum install -y hdf5

    yum update -y
    yum groupinstall -y "Development Tools"
    yum install -y epel-release
    yum install -y wget emacs vim 
    yum install -y emacs vim openssh-clients zip 
    yum install -y python-devel python-pip  python-setuptools centos-release-scl
    yum install -y hdf5  rh-python36 python36-setuptools
    scl enable rh-python36 bash
    yum install -y easy_install-3.6 python36-pip

    # pip basics
    pip3 --no-cache-dir --disable-pip-version-check install --upgrade setuptools
    pip3 --no-cache-dir --disable-pip-version-check install future
    pip3 --no-cache-dir --disable-pip-version-check install 'matplotlib' # for python2.7
    pip3 --no-cache-dir --disable-pip-version-check install 'ipython'    # for python2.7
    pip3 --no-cache-dir --disable-pip-version-check install 'ipykernel'  # for python2.7
    pip3 --no-cache-dir --disable-pip-version-check install numpy wheel zmq six pygments pyyaml cython gputil psutil humanize h5py tqdm scipy seaborn tables
    pip3 --no-cache-dir --disable-pip-version-check install  pandas scikit-image scikit-learn Pillow opencv-python
    pip3 --no-cache-dir --disable-pip-version-check install jupyter notebook

    # tensorflow
    pip3 --no-cache-dir --disable-pip-version-check install --upgrade tensorflow-gpu==1.14.0
    pip3 --no-cache-dir --disable-pip-version-check install tensorboard
    
    # keras
    pip3 --no-cache-dir --disable-pip-version-check install keras

    # install MPICH
    wget -q http://www.mpich.org/static/downloads/3.2.1/mpich-3.2.1.tar.gz
    tar xf mpich-3.2.1.tar.gz
    rm mpich-3.2.1.tar.gz
    cd mpich-3.2.1
    # disable the addition of the RPATH to compiled executables
    # this allows us to override the MPI libraries to use those
    # found via LD_LIBRARY_PATH
    ./configure --prefix=/usr/local/mpich/install --disable-wrapper-rpath
    make -j 4 install
    # add to local environment to build pi.c
    export PATH=$PATH:/usr/local/mpich//install/bin
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpich//install/lib
    env | sort
    cd ..
    rm -rf mpich-3.2.1

    # nccl2
    git clone https://github.com/NVIDIA/nccl.git
    cd nccl;
    make -j src.build
    make pkg.redhat.build
    rpm -i build/pkg/rpm/x86_64/libnccl* 
    cd -

    pip3 --no-cache-dir --disable-pip-version-check install mpi4py

    # customized
    mkdir /container
    cd /container
    git clone https://github.com/Hanyu-Li/ffn
    cd ffn
    pip3 --no-cache-dir --disable-pip-version-check install -r requirements.txt
    pip3 --no-cache-dir --disable-pip-version-check install -e .

    
    
