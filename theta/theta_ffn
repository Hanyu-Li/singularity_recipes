Bootstrap: docker
From: centos:centos7

%help

To start your container simply try
singularity exec THIS_CONTAINER.simg bash

To use GPUs, try
singularity exec --nv THIS_CONTAINER.simg bash


%environment

    # for system
    #export CUDA_DEVICE_ORDER=PCI_BUS_ID

    # Add cupti to the path for profiling:
    #export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64

    #source scl_source enable devtoolset-4
    export PATH=/usr/local/mpich/install/bin/:${PATH}
    export LD_LIBRARY_PATH=/usr/local/mpich/install/lib/:${LD_LIBRARY_PATH}

%post

    # yum basics
    yum install -y https://centos7.iuscommunity.org/ius-release.rpm
    yum update -y
    yum groupinstall -y "Development Tools"
    #yum install -y epel-release
    #yum install -y centos-release-scl
    yum install -y gcc gcc-c++
    yum install -y wget vim openssh-clients zip
    yum install -y python36u python36u-libs python36u-devel python36u-pip


    # pip basics
    pip3.6 install -U pip==19.3.1

    # install MPICH
    # mvapi
    # yum install libibverbs-devel libibmad-devel
    # wget http://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich2-2.3.3.tar.gz
    # tar xvf mvapich2-2.3.3.tar.gz
    # cd mvapich2-2.3.3
    # ./configure --prefix=/usr/local/mvapich/install --disable-wrapper-rpath
    # make -j 16 install
    MPICH_VERSION=3.3
    echo installing mpich $MPICH_VERSION
    mkdir /mpich
    cd /mpich
    wget http://www.mpich.org/static/downloads/$MPICH_VERSION/mpich-$MPICH_VERSION.tar.gz
    tar xf mpich-$MPICH_VERSION.tar.gz --strip-components=1
    ./configure --prefix=/usr/local/mpich/install --disable-wrapper-rpath
    make -j 40 install


    
    export PATH=$PATH:/usr/local/mpich/install/bin
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpich/install/lib
    # env | sort
    cd ..

    pip --no-cache-dir --disable-pip-version-check install mpi4py

    # parallel hdf5
    export CC=/usr/local/mpich/install/bin/mpicc
    mkdir /container
    cd /container
    wget https://s3.amazonaws.com/hdf-wordpress-1/wp-content/uploads/manual/HDF5/HDF5_1_10_5/source/hdf5-1.10.5.tar.gz
    tar xvf hdf5-1.10.5.tar.gz
    cd ./hdf5-1.10.5
    ./configure --enable-parallel --enable-shared --prefix /usr/local/hdf5/install
    make -j 40 install
    cd ..

    # crucial python packages
    pip --no-cache-dir --disable-pip-version-check install --upgrade setuptools
    pip --no-cache-dir --disable-pip-version-check install numpy cython wheel six
    git clone -b 2.10.0 https://github.com/h5py/h5py.git
    cd h5py
    python3 setup.py configure --mpi --hdf5 /usr/local/hdf5/install
    python3 setup.py build
    pip install .
    cd ..


    #pip --no-cache-dir --disable-pip-version-check install horovod
    # HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_WITH_TENSORFLOW=1 HOROVOD_NCCL_HOME=/nccl/build/ pip install --no-cache-dir horovod

    # all pip related
    pip --no-cache-dir --disable-pip-version-check install numpy wheel zmq six pygments pyyaml cython gputil psutil humanize tqdm scipy seaborn tables
    pip install https://storage.googleapis.com/intel-optimized-tensorflow/intel_tensorflow-1.14.0-cp36-cp36m-manylinux1_x86_64.whl
    pip --no-cache-dir --disable-pip-version-check install future
    pip --no-cache-dir --disable-pip-version-check install 'matplotlib' 
    pip --no-cache-dir --disable-pip-version-check install 'ipython'    
    pip --no-cache-dir --disable-pip-version-check install 'ipykernel'  
    pip --no-cache-dir --disable-pip-version-check install pandas scikit-image scikit-learn Pillow opencv-python
    pip --no-cache-dir --disable-pip-version-check install jupyter notebook

    # tensorflow
    # pip --no-cache-dir --disable-pip-version-check install --upgrade tensorflow-gpu==1.14.0
    # pip --no-cache-dir --disable-pip-version-check install intel-tensorflow==1.15.2
    # pip --no-cache-dir --disable-pip-version-check install tensorboard
    HOROVOD_WITH_TENSORFLOW=1 CC=mpicc CXX=mpicxx pip install horovod
    
    # keras
    pip --no-cache-dir --disable-pip-version-check install keras


    # customized
    yum install -y ninja-build
    pip --no-cache-dir --disable-pip-version-check install scikit-build
    pip --no-cache-dir --disable-pip-version-check install DracoPy
    pip --no-cache-dir --disable-pip-version-check install cloud-volume
    pip --no-cache-dir --disable-pip-version-check install Pillow-PIL absl-py
    git clone -b tf2 https://github.com/Hanyu-Li/ffn
    cd ffn
    pip --no-cache-dir --disable-pip-version-check install .



    
    
